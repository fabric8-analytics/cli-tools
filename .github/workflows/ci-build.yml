name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  goreport:
    name: Refresh-goreport
    runs-on: ubuntu-latest
    steps:
      - uses: creekorful/goreportcard-action@v1.0
  golangci-lint:
    name: Linter
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go 1.x
        uses: actions/setup-go@v4
        with:
          go-version: ^1.19
      - uses: actions/checkout@v3
      - name: Get dependencies
        run: go mod download
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: v1.52
          working-directory: gomanifest
          skip-build-cache: true
          skip-pkg-cache: true
  golint:
    name: go Lint
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go 1.x
        uses: actions/setup-go@v4
        with:
          go-version: ^1.19
      - uses: actions/checkout@v3
      - name: go vet
        run: go vet ./...
      - name: go run staticcheck
        run: go run honnef.co/go/tools/cmd/staticcheck@latest ./...
  build:
    name: Build
    runs-on: ubuntu-latest
    strategy:
        matrix:
            version:
                - "1.18"
                - "1.19"
                - "1.20"
    steps:
    - name: Set up Go 1.x
      uses: actions/setup-go@v4
      with:
        go-version: ${{ matrix.version }}
    - name: Check out code into the Go module directory
      uses: actions/checkout@v3
    - name: Check go mod
      run: |
          go mod tidy
          git diff --exit-code go.mod
    - name: Unit Test
      run:  go test `go list ./... | grep -v acceptance-tests` -gcflags=-l -v  -coverprofile=coverage.txt -covermode=atomic
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v1
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
